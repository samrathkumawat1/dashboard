{"ast":null,"code":"var _jsxFileName = \"/Users/samrath/Samrath/NavajnaTask-master/src/Chart.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Divider } from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\nimport WarningOutlinedIcon from '@material-ui/icons/WarningOutlined';\nimport Grid from \"@material-ui/core/Grid\";\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport StoreIcon from '@material-ui/icons/Store';\nimport InfoIcon from '@material-ui/icons/Info';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport { Chart } from 'react-charts';\nimport ChartistGraph from \"react-chartist\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 375,\n    width: 375,\n    height: 300,\n    flexGrow: 1\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14,\n    color: '#9E42B0',\n    textColor: '#9E42B0'\n  },\n  pos: {\n    marginBottom: 12\n  },\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  cardCategoryWhite: {\n    color: \"#ffffff\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitle: {\n    color: '#000000',\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"200\",\n    fontSize: 17,\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: '#666666',\n      fontWeight: \"200\",\n      lineHeight: \"1\",\n      fontSize: 17\n    }\n  },\n  cardCategory: {\n    color: '#666666',\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"200\",\n    fontSize: 13,\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: '#666666',\n      fontWeight: \"200\",\n      lineHeight: \"1\",\n      fontSize: 13\n    }\n  },\n  cardTitleWhite: {\n    color: '#ffffff',\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: '#666666',\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n});\nexport default function CustomChart() {\n  const classes = useStyles();\n  const bull = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bullet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 16\n    }\n  }, \"\\u2022\");\n  var delays = 80,\n      durations = 500;\n  var delays2 = 80,\n      durations2 = 500;\n\n  const Chartist = require(\"chartist\");\n\n  const dailySalesChart = {\n    data: {\n      labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n      series: [[10, 15, 20, 25, 27, 30, 35]]\n    },\n    options: {\n      lineSmooth: Chartist.Interpolation.cardinal({\n        tension: 0,\n        showArea: true\n      }),\n      low: 0,\n      high: 50,\n      // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n      chartPadding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    },\n    // for animation\n    animation: {\n      draw: function (data) {\n        if (data.type === \"line\" || data.type === \"area\") {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n              to: data.path.clone().stringify(),\n              easing: Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if (data.type === \"point\") {\n          data.element.animate({\n            opacity: {\n              begin: (data.index + 1) * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      background: \"#EEEEEE\",\n      marginLeft: 15,\n      marginTop: 5,\n      padding: 15\n    },\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      padding: \"0 15px !important\",\n      marginTop: 5\n    },\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    className: classes.root,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexDirection: 'coloumn'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartistGraph, {\n    style: {\n      color: 'white',\n      fontSize: '10px',\n      fontFamily: 'sans-serif',\n      stroke: '#EEEEEE',\n      strokeWidth: '1',\n      strokeDasharray: '1px 1px'\n    },\n    className: \"ct-chart\",\n    data: dailySalesChart.data,\n    type: \"Line\",\n    options: dailySalesChart.options,\n    listener: dailySalesChart.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: '#EEEEEE',\n      marginTop: 15,\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 16,\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, \"Daily Sales\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontSize: 10,\n      color: 'green'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }, \"55%\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      marginLeft: 5,\n      fontSize: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, \"increase in today sales\")))))));\n}","map":{"version":3,"sources":["/Users/samrath/Samrath/NavajnaTask-master/src/Chart.js"],"names":["React","makeStyles","Card","CardContent","Typography","Divider","CardHeader","IconButton","Avatar","FileCopyOutlinedIcon","WarningOutlinedIcon","Grid","DateRangeIcon","LocalOfferIcon","UpdateIcon","StoreIcon","InfoIcon","TwitterIcon","Chart","ChartistGraph","useStyles","root","minWidth","width","height","flexGrow","bullet","display","margin","transform","title","fontSize","color","textColor","pos","marginBottom","cardCategoryWhite","marginTop","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","cardTitle","cardCategory","CustomChart","classes","bull","delays","durations","delays2","durations2","Chartist","require","dailySalesChart","data","labels","series","options","lineSmooth","Interpolation","cardinal","tension","showArea","low","high","chartPadding","top","right","bottom","left","animation","draw","type","element","animate","d","begin","dur","from","path","clone","scale","translate","chartRect","stringify","to","easing","Svg","Easing","easeOutQuint","opacity","index","background","marginLeft","padding","flexDirection","stroke","strokeWidth","strokeDasharray","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Divider } from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\nimport WarningOutlinedIcon from '@material-ui/icons/WarningOutlined';\nimport Grid from \"@material-ui/core/Grid\";\n\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport StoreIcon from '@material-ui/icons/Store';\nimport InfoIcon from '@material-ui/icons/Info';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport { Chart } from 'react-charts'\nimport ChartistGraph from \"react-chartist\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 375,\n    width:375,\n    height:300,\n    flexGrow: 1,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n    color:'#9E42B0',\n    textColor:'#9E42B0',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n  ,\n  cardCategoryWhite: {\n    color: \"#ffffff\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitle: {\n    color: '#000000',\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"200\",\n    fontSize:17,\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: '#666666',\n      fontWeight: \"200\",\n      lineHeight: \"1\",\n      fontSize:17,\n    }\n  },\n  cardCategory:{\n    color: '#666666',\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"200\",\n    fontSize:13,\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: '#666666',\n      fontWeight: \"200\",\n      lineHeight: \"1\",\n      fontSize:13,\n    }\n  },\n  cardTitleWhite: {\n    color: '#ffffff',\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: '#666666',\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n});\n\nexport default function CustomChart() {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  var delays = 80,\n  durations = 500;\nvar delays2 = 80,\n  durations2 = 500;\n  const Chartist = require(\"chartist\");\n  const dailySalesChart = {\n    data: {\n      labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n      series: [[10, 15, 20, 25, 27, 30, 35]]\n    },\n    options: {\n      lineSmooth: Chartist.Interpolation.cardinal({\n        tension: 0,\n        showArea: true,\n      }),\n      low: 0,\n      high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n      chartPadding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    },\n    // for animation\n    animation: {\n      draw: function(data) {\n        if (data.type === \"line\" || data.type === \"area\") {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path\n                .clone()\n                .scale(1, 0)\n                .translate(0, data.chartRect.height())\n                .stringify(),\n              to: data.path.clone().stringify(),\n              easing: Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if (data.type === \"point\") {\n          data.element.animate({\n            opacity: {\n              begin: (data.index + 1) * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      }\n    }\n  };\n  return (\n\n    <Grid style={{background:\"#EEEEEE\",marginLeft:15,marginTop:5,padding:15}} container spacing={3} >\n        <Grid style={{ padding: \"0 15px !important\",marginTop:5}} item xs={12} sm={6} md={3}>\n        \n        <Card chart className={classes.root} variant=\"outlined\">\n\n        <div style={{flexDirection:'coloumn'}}>\n            <div style={{background:\"green\"}} >\n                <ChartistGraph\n                    style={{color:'white', fontSize: '10px',\n        fontFamily:'sans-serif',stroke:'#EEEEEE',strokeWidth: '1',\n        strokeDasharray: '1px 1px',\n        }}\n                className=\"ct-chart\"\n                data={dailySalesChart.data}\n                type=\"Line\"\n                options={dailySalesChart.options}\n                    listener={dailySalesChart.animation}\n                />\n\n            </div>\n\n            <div style={{background:'#EEEEEE',marginTop:15,flexDirection:'column'}}>\n\n                    <p  style={{fontSize:16,color:'black'}}>Daily Sales</p>\n                    <div style={{display:'flex',flex:1,flexDirection:'row'}}>\n                        <h3 style={{fontSize:10,color:'green'}}>55%</h3>\n                        <h3 style={{marginLeft:5,fontSize:10}}>increase in today sales</h3>\n                    </div>\n                    \n                </div>\n        </div>    \n        </Card>\n        </Grid>\n\n        </Grid>\n   \n  );\n}"]},"metadata":{},"sourceType":"module"}