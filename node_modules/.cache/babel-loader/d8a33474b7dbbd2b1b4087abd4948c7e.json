{"ast":null,"code":"var _jsxFileName = \"/Users/samrath/Samrath/NavajnaTask-master/src/Tables.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nconst tableStyle = theme => ({\n  warningTableHeader: {\n    color: warningColor\n  },\n  primaryTableHeader: {\n    color: primaryColor\n  },\n  dangerTableHeader: {\n    color: dangerColor\n  },\n  successTableHeader: {\n    color: successColor\n  },\n  infoTableHeader: {\n    color: infoColor\n  },\n  roseTableHeader: {\n    color: roseColor\n  },\n  grayTableHeader: {\n    color: grayColor\n  },\n  table: {\n    marginBottom: \"0\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    backgroundColor: \"transparent\",\n    borderSpacing: \"0\",\n    borderCollapse: \"collapse\"\n  },\n  tableHeadCell: {\n    color: \"inherit\",\n    \"&, &$tableCell\": {\n      fontSize: \"1em\"\n    }\n  },\n  tableCell: {\n    lineHeight: \"1.42857143\",\n    padding: \"12px 8px\",\n    verticalAlign: \"middle\",\n    fontSize: \"0.8125rem\"\n  },\n  tableResponsive: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\"\n  },\n  tableHeadRow: {\n    height: \"56px\",\n    color: \"inherit\",\n    display: \"table-row\",\n    outline: \"none\",\n    verticalAlign: \"middle\"\n  },\n  tableBodyRow: {\n    height: \"48px\",\n    color: \"inherit\",\n    display: \"table-row\",\n    outline: \"none\",\n    verticalAlign: \"middle\"\n  }\n});\n\nconst useStyles = makeStyles(styles);\nexport default function CustomTable(props) {\n  const classes = useStyles();\n  const {\n    tableHead,\n    tableData,\n    tableHeaderColor\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tableResponsive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, tableHead !== undefined ? /*#__PURE__*/React.createElement(TableHead, {\n    className: classes[tableHeaderColor + \"TableHeader\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    className: classes.tableHeadRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, tableHead.map((prop, key) => {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableCell + \" \" + classes.tableHeadCell,\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, prop);\n  }))) : null, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, tableData.map((prop, key) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: key,\n      className: classes.tableBodyRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, prop.map((prop, key) => {\n      return /*#__PURE__*/React.createElement(TableCell, {\n        className: classes.tableCell,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, prop);\n    }));\n  }))));\n}\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\"warning\", \"primary\", \"danger\", \"success\", \"info\", \"rose\", \"gray\"]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};","map":{"version":3,"sources":["/Users/samrath/Samrath/NavajnaTask-master/src/Tables.js"],"names":["React","PropTypes","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","tableStyle","theme","warningTableHeader","color","warningColor","primaryTableHeader","primaryColor","dangerTableHeader","dangerColor","successTableHeader","successColor","infoTableHeader","infoColor","roseTableHeader","roseColor","grayTableHeader","grayColor","table","marginBottom","width","maxWidth","backgroundColor","borderSpacing","borderCollapse","tableHeadCell","fontSize","tableCell","lineHeight","padding","verticalAlign","tableResponsive","marginTop","spacing","overflowX","tableHeadRow","height","display","outline","tableBodyRow","useStyles","styles","CustomTable","props","classes","tableHead","tableData","tableHeaderColor","undefined","map","prop","key","defaultProps","propTypes","oneOf","arrayOf","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\n\nconst tableStyle = theme => ({\n    warningTableHeader: {\n      color: warningColor\n    },\n    primaryTableHeader: {\n      color: primaryColor\n    },\n    dangerTableHeader: {\n      color: dangerColor\n    },\n    successTableHeader: {\n      color: successColor\n    },\n    infoTableHeader: {\n      color: infoColor\n    },\n    roseTableHeader: {\n      color: roseColor\n    },\n    grayTableHeader: {\n      color: grayColor\n    },\n    table: {\n      marginBottom: \"0\",\n      width: \"100%\",\n      maxWidth: \"100%\",\n      backgroundColor: \"transparent\",\n      borderSpacing: \"0\",\n      borderCollapse: \"collapse\"\n    },\n    tableHeadCell: {\n      color: \"inherit\",\n      \"&, &$tableCell\": {\n        fontSize: \"1em\"\n      }\n    },\n    tableCell: {\n      lineHeight: \"1.42857143\",\n      padding: \"12px 8px\",\n      verticalAlign: \"middle\",\n      fontSize: \"0.8125rem\"\n    },\n    tableResponsive: {\n      width: \"100%\",\n      marginTop: theme.spacing(3),\n      overflowX: \"auto\"\n    },\n    tableHeadRow: {\n      height: \"56px\",\n      color: \"inherit\",\n      display: \"table-row\",\n      outline: \"none\",\n      verticalAlign: \"middle\"\n    },\n    tableBodyRow: {\n      height: \"48px\",\n      color: \"inherit\",\n      display: \"table-row\",\n      outline: \"none\",\n      verticalAlign: \"middle\"\n    }\n  });\n\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomTable(props) {\n  const classes = useStyles();\n  const { tableHead, tableData, tableHeaderColor } = props;\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((prop, key) => {\n            return (\n              <TableRow key={key} className={classes.tableBodyRow}>\n                {prop.map((prop, key) => {\n                  return (\n                    <TableCell className={classes.tableCell} key={key}>\n                      {prop}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};"]},"metadata":{},"sourceType":"module"}