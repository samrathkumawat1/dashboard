{"ast":null,"code":"var _jsxFileName = \"/Users/samrath/Samrath/NavajnaTask-master/src/Chart.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Divider } from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\nimport WarningOutlinedIcon from '@material-ui/icons/WarningOutlined';\nimport Grid from \"@material-ui/core/Grid\";\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport StoreIcon from '@material-ui/icons/Store';\nimport InfoIcon from '@material-ui/icons/Info';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport { Chart } from 'react-charts';\nimport ChartistGraph from \"react-chartist\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14,\n    color: '#9E42B0',\n    textColor: '#9E42B0'\n  },\n  pos: {\n    marginBottom: 12\n  },\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  cardCategoryWhite: {\n    color: \"#ffffff\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitle: {\n    color: '#000000',\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"200\",\n    fontSize: 17,\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: '#666666',\n      fontWeight: \"200\",\n      lineHeight: \"1\",\n      fontSize: 17\n    }\n  },\n  cardCategory: {\n    color: '#666666',\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"200\",\n    fontSize: 13,\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: '#666666',\n      fontWeight: \"200\",\n      lineHeight: \"1\",\n      fontSize: 13\n    }\n  },\n  cardTitleWhite: {\n    color: '#ffffff',\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: '#666666',\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n});\nexport default function CustomChart() {\n  const classes = useStyles();\n  const bull = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bullet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 16\n    }\n  }, \"\\u2022\");\n  var delays = 80,\n      durations = 500;\n  var delays2 = 80,\n      durations2 = 500;\n\n  const Chartist = require(\"chartist\");\n\n  const dailySalesChart = {\n    data: {\n      labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n      series: [[10, 15, 20, 25, 27, 30, 35]]\n    },\n    options: {\n      lineSmooth: Chartist.Interpolation.cardinal({\n        tension: 0,\n        showArea: true\n      }),\n      low: 0,\n      high: 50,\n      // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n      chartPadding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    },\n    // for animation\n    animation: {\n      draw: function (data) {\n        if (data.type === \"line\" || data.type === \"area\") {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n              to: data.path.clone().stringify(),\n              easing: Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if (data.type === \"point\") {\n          data.element.animate({\n            opacity: {\n              begin: (data.index + 1) * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      }\n    }\n  };\n  const emailsSubscriptionChart = {\n    data: {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      series: [[542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n    },\n    options: {\n      axisX: {\n        showGrid: false\n      },\n      low: 0,\n      high: 1000,\n      chartPadding: {\n        top: 0,\n        right: 5,\n        bottom: 0,\n        left: 0\n      }\n    },\n    responsiveOptions: [[\"screen and (max-width: 640px)\", {\n      seriesBarDistance: 5,\n      axisX: {\n        labelInterpolationFnc: function (value) {\n          return value[0];\n        }\n      }\n    }]],\n    animation: {\n      draw: function (data) {\n        if (data.type === \"bar\") {\n          data.element.animate({\n            opacity: {\n              begin: (data.index + 1) * delays2,\n              dur: durations2,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      }\n    }\n  }; // ##############################\n  // // // Completed Tasks\n  // #############################\n\n  const completedTasksChart = {\n    data: {\n      labels: [\"12am\", \"3pm\", \"6pm\", \"9pm\", \"12pm\", \"3am\", \"6am\", \"9am\"],\n      series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n    },\n    options: {\n      lineSmooth: Chartist.Interpolation.cardinal({\n        tension: 0\n      }),\n      low: 0,\n      high: 1000,\n      // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n      chartPadding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    },\n    animation: {\n      draw: function (data) {\n        if (data.type === \"line\" || data.type === \"area\") {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n              to: data.path.clone().stringify(),\n              easing: Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if (data.type === \"point\") {\n          data.element.animate({\n            opacity: {\n              begin: (data.index + 1) * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      paddingBottom: 10,\n      marginTop: 10\n    },\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    className: classes.root,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingLeft: 20,\n      paddingTop: 10,\n      paddingRight: 20,\n      flexDirection: 'coloumn',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 10,\n      background: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartistGraph, {\n    style: {\n      color: 'white',\n      fontSize: '10px',\n      fontFamily: 'sans-serif',\n      stroke: '#EEEEEE',\n      strokeWidth: '1',\n      strokeDasharray: '1px 1px'\n    },\n    className: \"ct-chart\",\n    data: dailySalesChart.data,\n    type: \"Line\",\n    options: dailySalesChart.options,\n    listener: dailySalesChart.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 20,\n      paddingLeft: 15,\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 16,\n      marginLeft: 10,\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 21\n    }\n  }, \"Daily Sales\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      marginLeft: 3,\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ArrowUpwardIcon, {\n    style: {\n      color: \"green\",\n      paddingBottom: 2\n    },\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      paddingTop: 2,\n      marginLeft: 5,\n      fontSize: 14,\n      color: 'green'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 25\n    }\n  }, \"55%\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      paddingTop: 2,\n      marginLeft: 5,\n      fontSize: 14,\n      color: \"#666666\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 25\n    }\n  }, \"increase in today sales\"))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      paddingLeft: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UpdateIcon, {\n    size: \"small\",\n    style: {\n      color: \"#666666\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    style: {\n      marginLeft: 10,\n      marginTop: 5,\n      fontSize: 13,\n      color: \"#666666\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  }, \"updated 4 minutes ago\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    className: classes.root,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingRight: 20,\n      paddingLeft: 20,\n      paddingTop: 10,\n      flexDirection: 'coloumn',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 10,\n      background: \"#F39231\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartistGraph, {\n    style: {\n      color: 'white',\n      fontSize: '10px',\n      fontFamily: 'sans-serif'\n    },\n    className: \"ct-chart\",\n    data: emailsSubscriptionChart.data,\n    type: \"Bar\",\n    options: emailsSubscriptionChart.options,\n    responsiveOptions: emailsSubscriptionChart.responsiveOptions,\n    listener: emailsSubscriptionChart.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 20,\n      paddingLeft: 15,\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 16,\n      marginLeft: 10,\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 21\n    }\n  }, \"Email Subscriptions\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      marginLeft: 3,\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      paddingTop: 2,\n      marginLeft: 5,\n      fontSize: 14,\n      color: \"#666666\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 25\n    }\n  }, \"Last Campaign Performance\"))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      paddingLeft: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UpdateIcon, {\n    size: \"small\",\n    style: {\n      color: \"#666666\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    style: {\n      marginLeft: 10,\n      marginTop: 5,\n      fontSize: 13,\n      color: \"#666666\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 17\n    }\n  }, \"campaign sent 2 days ago\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    className: classes.root,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingRight: 20,\n      paddingLeft: 20,\n      paddingTop: 10,\n      flexDirection: 'coloumn',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 10,\n      background: \"#E8453A\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartistGraph, {\n    style: {\n      color: 'white',\n      fontSize: '10px',\n      fontFamily: 'sans-serif'\n    },\n    className: \"ct-chart\",\n    data: completedTasksChart.data,\n    type: \"Line\",\n    options: completedTasksChart.options,\n    listener: completedTasksChart.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 20,\n      paddingLeft: 15,\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 16,\n      marginLeft: 10,\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 21\n    }\n  }, \"Completed Task\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      marginLeft: 3,\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      paddingTop: 2,\n      marginLeft: 5,\n      fontSize: 14,\n      color: 'green'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      paddingTop: 2,\n      marginLeft: 5,\n      fontSize: 14,\n      color: \"#666666\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 25\n    }\n  }, \"Last Compaign Performance\"))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      paddingLeft: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UpdateIcon, {\n    size: \"small\",\n    style: {\n      color: \"#666666\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    style: {\n      marginLeft: 10,\n      marginTop: 5,\n      fontSize: 13,\n      color: \"#666666\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 17\n    }\n  }, \"campaign sent 2 days ago\")))));\n}","map":{"version":3,"sources":["/Users/samrath/Samrath/NavajnaTask-master/src/Chart.js"],"names":["React","makeStyles","Card","CardContent","Typography","Divider","CardHeader","IconButton","Avatar","FileCopyOutlinedIcon","WarningOutlinedIcon","Grid","DateRangeIcon","LocalOfferIcon","UpdateIcon","StoreIcon","InfoIcon","TwitterIcon","Chart","ChartistGraph","ArrowUpwardIcon","useStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","color","textColor","pos","marginBottom","cardCategoryWhite","marginTop","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","cardTitle","cardCategory","CustomChart","classes","bull","delays","durations","delays2","durations2","Chartist","require","dailySalesChart","data","labels","series","options","lineSmooth","Interpolation","cardinal","tension","showArea","low","high","chartPadding","top","right","bottom","left","animation","draw","type","element","animate","d","begin","dur","from","path","clone","scale","translate","chartRect","height","stringify","to","easing","Svg","Easing","easeOutQuint","opacity","index","emailsSubscriptionChart","axisX","showGrid","responsiveOptions","seriesBarDistance","labelInterpolationFnc","value","completedTasksChart","paddingBottom","paddingLeft","paddingTop","paddingRight","flexDirection","padding","background","stroke","strokeWidth","strokeDasharray","marginLeft","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Divider } from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\nimport WarningOutlinedIcon from '@material-ui/icons/WarningOutlined';\nimport Grid from \"@material-ui/core/Grid\";\n\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport StoreIcon from '@material-ui/icons/Store';\nimport InfoIcon from '@material-ui/icons/Info';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport { Chart } from 'react-charts'\nimport ChartistGraph from \"react-chartist\";\n\n\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    \n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n    color:'#9E42B0',\n    textColor:'#9E42B0',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n  ,\n  cardCategoryWhite: {\n    color: \"#ffffff\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitle: {\n    color: '#000000',\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"200\",\n    fontSize:17,\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: '#666666',\n      fontWeight: \"200\",\n      lineHeight: \"1\",\n      fontSize:17,\n    }\n  },\n  cardCategory:{\n    color: '#666666',\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"200\",\n    fontSize:13,\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: '#666666',\n      fontWeight: \"200\",\n      lineHeight: \"1\",\n      fontSize:13,\n    }\n  },\n  cardTitleWhite: {\n    color: '#ffffff',\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: '#666666',\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n});\n\nexport default function CustomChart() {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  var delays = 80,\n  durations = 500;\nvar delays2 = 80,\n  durations2 = 500;\n  const Chartist = require(\"chartist\");\n  const dailySalesChart = {\n    data: {\n      labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n      series: [[10, 15, 20, 25, 27, 30, 35]]\n    },\n    options: {\n      lineSmooth: Chartist.Interpolation.cardinal({\n        tension: 0,\n        showArea: true,\n      }),\n      low: 0,\n      high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n      chartPadding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    },\n    // for animation\n    animation: {\n      draw: function(data) {\n        if (data.type === \"line\" || data.type === \"area\") {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path\n                .clone()\n                .scale(1, 0)\n                .translate(0, data.chartRect.height())\n                .stringify(),\n              to: data.path.clone().stringify(),\n              easing: Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if (data.type === \"point\") {\n          data.element.animate({\n            opacity: {\n              begin: (data.index + 1) * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      }\n    }\n  };\n\n\nconst emailsSubscriptionChart = {\n    data: {\n      labels: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"Mai\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\"\n      ],\n      series: [[542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n    },\n    options: {\n      axisX: {\n        showGrid: false\n      },\n      low: 0,\n      high: 1000,\n      chartPadding: {\n        top: 0,\n        right: 5,\n        bottom: 0,\n        left: 0\n      }\n    },\n    responsiveOptions: [\n      [\n        \"screen and (max-width: 640px)\",\n        {\n          seriesBarDistance: 5,\n          axisX: {\n            labelInterpolationFnc: function(value) {\n              return value[0];\n            }\n          }\n        }\n      ]\n    ],\n    animation: {\n      draw: function(data) {\n        if (data.type === \"bar\") {\n          data.element.animate({\n            opacity: {\n              begin: (data.index + 1) * delays2,\n              dur: durations2,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      }\n    }\n  };\n  \n  // ##############################\n  // // // Completed Tasks\n  // #############################\n  \n  const completedTasksChart = {\n    data: {\n      labels: [\"12am\", \"3pm\", \"6pm\", \"9pm\", \"12pm\", \"3am\", \"6am\", \"9am\"],\n      series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n    },\n    options: {\n      lineSmooth: Chartist.Interpolation.cardinal({\n        tension: 0\n      }),\n      low: 0,\n      high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n      chartPadding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    },\n    animation: {\n      draw: function(data) {\n        if (data.type === \"line\" || data.type === \"area\") {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path\n                .clone()\n                .scale(1, 0)\n                .translate(0, data.chartRect.height())\n                .stringify(),\n              to: data.path.clone().stringify(),\n              easing: Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if (data.type === \"point\") {\n          data.element.animate({\n            opacity: {\n              begin: (data.index + 1) * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      }\n    }\n  };\n\n  return (\n\n    <Grid style={{paddingBottom:10,marginTop:10}} container spacing={3} >\n        <Grid  item xs>\n        \n        <Card chart className={classes.root} variant=\"outlined\">\n\n        <div style={{paddingLeft:20,paddingTop:10,paddingRight:20,\n        flexDirection:'coloumn',display:'flex',\n                }}>\n            <div style={{padding:10,background:\"green\"}} >\n                <ChartistGraph\n                    style={{color:'white', fontSize: '10px',\n                    fontFamily:'sans-serif',stroke:'#EEEEEE',strokeWidth: '1',\n                    strokeDasharray: '1px 1px',\n                    }}\n                className=\"ct-chart\"\n                data={dailySalesChart.data}\n                type=\"Line\"\n                options={dailySalesChart.options}\n                    listener={dailySalesChart.animation}\n                />\n\n            </div>\n        </div>    \n        <div style={{paddingTop:20,\n                    paddingLeft:15,flexDirection:'column'}}>\n\n                    <p  style={{fontSize:16,marginLeft:10,color:'black'}}>Daily Sales</p>\n                    <div style={{display:'flex',marginLeft:3,flex:1,flexDirection:'row'}}>\n                        <ArrowUpwardIcon style={{ color: \"green\",paddingBottom:2 }} fontSize=\"small\" ></ArrowUpwardIcon>\n                        <h3 style={{paddingTop:2,marginLeft:5,fontSize:14,color:'green'}}>55%</h3>\n                        <h3 style={{paddingTop:2,marginLeft:5,fontSize:14,color:\"#666666\"}}>increase in today sales</h3>\n                    </div>\n                    \n                </div>\n\n        <Divider/>\n        <CardContent style={{paddingLeft:15}}>\n            <UpdateIcon size=\"small\" style={{ color: \"#666666\" }}  ></UpdateIcon>\n                <text style={{marginLeft:10,marginTop:5,fontSize:13,color:\"#666666\"}} >\n                updated 4 minutes ago\n                </text>\n            </CardContent>\n        </Card>\n        </Grid>\n\n        <Grid  item xs>\n        \n        <Card chart className={classes.root} variant=\"outlined\">\n        <div style={{paddingRight:20,paddingLeft:20,paddingTop:10,\n        flexDirection:'coloumn',display:'flex',\n                }}>\n            <div style={{padding:10,background:\"#F39231\"}} >\n            <ChartistGraph\n             style={{color:'white', fontSize: '10px',\n             fontFamily:'sans-serif',\n             }}\n                className=\"ct-chart\"\n                data={emailsSubscriptionChart.data}\n                type=\"Bar\"\n                options={emailsSubscriptionChart.options}\n                responsiveOptions={emailsSubscriptionChart.responsiveOptions}\n                listener={emailsSubscriptionChart.animation}\n              />\n            </div>\n        </div>    \n        <div style={{paddingTop:20,\n                    paddingLeft:15,flexDirection:'column'}}>\n\n                    <p  style={{fontSize:16,marginLeft:10,color:'black'}}>Email Subscriptions</p>\n                    <div style={{display:'flex',marginLeft:3,flex:1,flexDirection:'row'}}>\n                        <h3 style={{paddingTop:2,marginLeft:5,fontSize:14,color:\"#666666\"}}>Last Campaign Performance</h3>\n                    </div>\n                    \n                </div>\n\n        <Divider/>\n        <CardContent style={{paddingLeft:15}}>\n            <UpdateIcon size=\"small\" style={{ color: \"#666666\" }}  ></UpdateIcon>\n                <text style={{marginLeft:10,marginTop:5,fontSize:13,color:\"#666666\"}} >\n                campaign sent 2 days ago\n                </text>\n            </CardContent>\n        </Card>\n        </Grid>\n\n        <Grid  item xs>\n        \n        <Card chart className={classes.root} variant=\"outlined\">\n\n        <div style={{paddingRight:20,paddingLeft:20,paddingTop:10,\n        flexDirection:'coloumn',display:'flex',\n                }}>\n            <div style={{padding:10,background:\"#E8453A\"}} >\n            <ChartistGraph\n             style={{color:'white', fontSize: '10px',\n             fontFamily:'sans-serif'\n             }}\n                className=\"ct-chart\"\n                data={completedTasksChart.data}\n                type=\"Line\"\n                options={completedTasksChart.options}\n                listener={completedTasksChart.animation}\n              />\n\n            </div>\n        </div>    \n        <div style={{paddingTop:20,\n                    paddingLeft:15,flexDirection:'column'}}>\n\n                    <p  style={{fontSize:16,marginLeft:10,color:'black'}}>Completed Task</p>\n                    <div style={{display:'flex',marginLeft:3,flex:1,flexDirection:'row'}}>\n                        \n                        <h3 style={{paddingTop:2,marginLeft:5,fontSize:14,color:'green'}}></h3>\n                        <h3 style={{paddingTop:2,marginLeft:5,fontSize:14,color:\"#666666\"}}>Last Compaign Performance</h3>\n                    </div>\n                    \n                </div>\n\n        <Divider/>\n        <CardContent style={{paddingLeft:15}}>\n            <UpdateIcon size=\"small\" style={{ color: \"#666666\" }}  ></UpdateIcon>\n                <text style={{marginLeft:10,marginTop:5,fontSize:13,color:\"#666666\"}} >\n                campaign sent 2 days ago\n                </text>\n            </CardContent>\n        </Card>\n        </Grid>\n        </Grid>\n   \n  );\n}"]},"metadata":{},"sourceType":"module"}